{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/providers/sql-storage/sql-storage.ts","../../src/pages/home/home.ts","../../src/pages/list/list.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 107;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 107\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 148;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 148\n// module chunks = 0","import { Injectable } from '@angular/core';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite';\n\n@Injectable()\nexport class SqlStorage {\n\n  \tconstructor(private sqlite: SQLite) { }\n\n    /**\n   \t* Cria um banco caso nÃ£o exista ou pega um banco existente com o nome no parametro\n   \t*/\n\tpublic getDB() {\n\t\treturn this.sqlite.create({\n\t  \t\tname: 'clickponto.db',\n\t  \t\tlocation: 'default'\n\t\t});\n\t}\n\n\t/**\n\t* Cria a estrutura inicial do banco de dados\n\t*/\n\tpublic createDatabase() {\n\t\treturn this.getDB()\n\t  \t\t.then((db: SQLiteObject) => {\n\n\t    \t// Criando as tabelas\n\t    \tthis.createTables(db);\n\t  })\n\t  .catch(e => console.log(e));\n\t}\n\n\t/**\n\t* Criando as tabelas no banco de dados\n\t* @param db\n\t*/\n\tprivate createTables(db: SQLiteObject) {\n\t// Criando as tabelas\n\tdb.sqlBatch([\n\t  ['CREATE TABLE IF NOT EXISTS dados (id integer primary key AUTOINCREMENT NOT NULL, nome TEXT, email TEXT, carga_horaria REAL)']\n\t])\n\t  .then(() => console.log('Tabelas criadas'))\n\t  .catch(e => console.error('Erro ao criar as tabelas', e));\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/sql-storage/sql-storage.ts","import { Component } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite';\r\n\r\n@Component({\r\n  selector: 'page-home',\r\n  templateUrl: 'home.html'\r\n})\r\nexport class HomePage {\r\n\tpublic database: SQLiteObject;\r\n\tpublic invoices: Array<Object>;  \r\n\tpublic counter : number = 0;\r\n\r\n  \tconstructor(public navCtrl: NavController,private sqlite : SQLite) {\r\n\r\n  \t}\r\n\r\n  \tionViewDidEnter(){\r\n\t    console.log('view did enter');\r\n\t        this.sqlite.create({name: \"data.db\", location: \"default\"}).then((db : SQLiteObject) => {\r\n\t                this.database = db;\r\n\t                //this.createTable();\r\n\t            }, (error) => {\r\n\t                console.log(\"ERROR: \", error);\r\n\t        });    \r\n\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\n\r\n@Component({\r\n  selector: 'page-list',\r\n  templateUrl: 'list.html'\r\n})\r\nexport class ListPage {\r\n  selectedItem: any;\r\n  icons: string[];\r\n  items: Array<{title: string, note: string, icon: string}>;\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\r\n    // If we navigated to this page, we will have an item available as a nav param\r\n    this.selectedItem = navParams.get('item');\r\n\r\n    // Let's populate this page with some filler content for funzies\r\n    this.icons = ['flask', 'wifi', 'beer', 'football', 'basketball', 'paper-plane',\r\n    'american-football', 'boat', 'bluetooth', 'build'];\r\n\r\n    this.items = [];\r\n    for (let i = 1; i < 11; i++) {\r\n      this.items.push({\r\n        title: 'Item ' + i,\r\n        note: 'This is item #' + i,\r\n        icon: this.icons[Math.floor(Math.random() * this.icons.length)]\r\n      });\r\n    }\r\n  }\r\n\r\n  itemTapped(event, item) {\r\n    // That's right, we're pushing to ourselves!\r\n    this.navCtrl.push(ListPage, {\r\n      item: item\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list/list.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\r\nimport { IonicStorageModule } from '@ionic/storage';\r\n\r\n\r\nimport { MyApp } from './app.component';\r\nimport { HomePage } from '../pages/home/home';\r\nimport { ListPage } from '../pages/list/list';\r\n\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SQLite  , SQLiteDatabaseConfig , SQLiteObject } from '@ionic-native/sqlite';\r\nimport { SqlStorage } from '../providers/sql-storage/sql-storage';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\n\r\nclass SQLiteMock {\r\n  public create(config: SQLiteDatabaseConfig): Promise<SQLiteObject> {\r\n\r\n      return new Promise((resolve,reject)=>{\r\n      resolve(new SQLiteObject(new Object()));\r\n      });\r\n  }\r\n} \r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    HomePage,\r\n    ListPage\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    IonicModule.forRoot(MyApp),\r\n    IonicStorageModule.forRoot()\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    HomePage,\r\n    ListPage\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    {provide: SQLite, useClass: SQLiteMock},\r\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\r\n    SqlStorage,\r\n\r\n  ]\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { Nav, Platform } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { SqlStorage } from '../providers/sql-storage/sql-storage';\r\n\r\nimport { HomePage } from '../pages/home/home';\r\nimport { ListPage } from '../pages/list/list';\r\n\r\n@Component({\r\n  templateUrl: 'app.html'\r\n})\r\nexport class MyApp {\r\n  @ViewChild(Nav) nav: Nav;\r\n\r\n  rootPage: any = HomePage;\r\n\r\n  pages: Array<{title: string, component: any}>;\r\n\r\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen, public sqlStorage: SqlStorage) {\r\n    this.initializeApp();\r\n\r\n    // used for an example of ngFor and navigation\r\n    this.pages = [\r\n      { title: 'Home', component: HomePage },\r\n      { title: 'List', component: ListPage }\r\n    ];\r\n\r\n  }\r\n\r\n  initializeApp() {\r\n    this.platform.ready().then(() => {\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      this.statusBar.styleDefault();\r\n      this.splashScreen.hide();\r\n    });\r\n  }\r\n\r\n  openPage(page) {\r\n    // Reset the content nav to have just this page\r\n    // we wouldn't want the back button to show in this scenario\r\n    this.nav.setRoot(page.component);\r\n  }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}