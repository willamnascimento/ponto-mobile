{"version":3,"sources":["../../src/pages/login/login.ts","../../src/providers/dados/dados.ts","../../node_modules/@angular/core/@angular lazy","../../src/providers/auth-service/auth-service.ts","../../src lazy","../../src/providers/global/global.ts","../../src/providers/sql-storage/sql-storage.ts","../../src/pages/home/home.ts","../../src/providers/cache/cache.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Dados } from '../../providers/dados/dados';\r\nimport { AuthService } from '../../providers/auth-service/auth-service';\r\nimport { CacheProvider } from '../../providers/cache/cache';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NavController, AlertController, LoadingController, Loading, IonicPage, ToastController } from 'ionic-angular';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Global } from '../../providers/global/global';\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-login',\r\n  templateUrl: 'login.html',\r\n})\r\n\r\nexport class LoginPage {\r\n    loading: Loading;\r\n    registerCredentials = { email: '', senha: '' };\r\n\r\n    constructor(private navCtrl: NavController, private toast: ToastController, private auth: AuthService, private alertCtrl: AlertController, private loadingCtrl: LoadingController, private dados: Dados, private global: Global) { }\r\n\r\n    //constructor(public navCtrl: NavController, public navParams: NavParams, private toast: ToastController, private dados: Dados, public formBuilder: FormBuilder, public loadingCtrl: LoadingController, public cache: CacheProvider) {\r\n    //    this.login = this.formBuilder.group({\r\n    //        email: ['', Validators.required],\r\n    //        senha: ['', Validators.required]\r\n            \r\n    //    });\r\n    //}\r\n\r\n  ngOnInit() {\r\n      // ...\r\n  }\r\n\r\n  login() {\r\n\r\n      this.showLoading();\r\n      if (!this.global.sem_banco) {\r\n          this.dados.login(this.registerCredentials)\r\n              .subscribe(\r\n              data => {\r\n                  this.toast.create({ message: data.message, position: 'botton', duration: 3000, }).present();\r\n                  if (data.message.match(\"sucesso\"))\r\n                      this.navCtrl.push('ApontamentoPage');\r\n                  else\r\n                      this.loading.dismiss();\r\n              },\r\n              err => {\r\n                  this.toast.create({ message: ' Erro: verifique conexão com internet.', position: 'botton', duration: 3000 }).present();\r\n                  this.loading.dismiss();\r\n              }\r\n              );\r\n      } else {\r\n          this.navCtrl.push('ApontamentoPage');\r\n          this.toast.create({ message: 'Usuário logado com sucesso.', position: 'botton', duration: 3000 }).present();\r\n          this.loading.dismiss();\r\n      }\r\n      \r\n      //this.cache.loadList(this.login.value);\r\n  }\r\n  showLoading() {\r\n      this.loading = this.loadingCtrl.create({\r\n          content: 'Por favor aguarde...',\r\n          dismissOnPageChange: true\r\n      });\r\n      this.loading.present();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { Injectable } from '@angular/core';\nimport { SQLiteObject } from '@ionic-native/sqlite';\nimport { SqlStorage } from '../sql-storage/sql-storage';\nimport { Http, Headers, Response, ResponseOptions } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class Dados {\n    private API_URL = 'http://localhost:60643/api/account/';\n\n    constructor(public http: Http) { }\n\n    createAccount(parans) {\n        let headers = new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' });\r\n        return this.http.post(this.API_URL + \"add\", parans, {\r\n            headers: headers,\r\n            method: \"POST\",\r\n            params: parans\r\n        }).map(\r\n            (res: Response) => { return res.json(); }\r\n            );\n    }\n\n    login(parans) {\n        let headers = new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' });\r\n        return this.http.post(this.API_URL + \"login\", parans, {\r\n            headers: headers,\r\n            method: \"POST\",\r\n            params: parans\r\n        }).map(\r\n            (res: Response) => { return res.json(); }\r\n            );\n    }\n\n    getAll(page: number) {\n        \n    }\n\n    get(id: number) {\n        \n    }\n\n    insert(user: any) {\n        \n    }\n\n    update(user: any) {\n        \n    }\n\n    remove(id: number) {\n        \n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/dados/dados.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 115;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 115\n// module chunks = 3","import { Injectable } from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport { Http, Headers, Response, ResponseOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\nexport class User {\r\n    email: string;\r\n    senha: string;\r\n\r\n    constructor(email: string, senha: string) {\r\n        this.email = email;\r\n        this.senha = senha;\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    private API_URL = 'http://localhost:60643/api/account/';\r\n    currentUser: User;\r\n\r\n    constructor(public http: Http) { }\r\n\r\n    public login(credentials) {\r\n        if (credentials.email === null || credentials.password === null) {\r\n            return Observable.throw(\"Please insert credentials\");\r\n        } else {\r\n            //let headers = new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' });\r\n            //let a = this.http.post(this.API_URL + \"login\", credentials, {\r\n            //    headers: headers,\r\n            //    method: \"POST\",\r\n            //    params: credentials\r\n            //}).map(\r\n            //    (res: Response) => { return res.json(); }\r\n            //    );\r\n\r\n\r\n            return Observable.create(observer => {\r\n                debugger\r\n                // At this point make a request to your backend to make a real check!\r\n                let access = (credentials.password === \"pass\" && credentials.email === \"email\");\r\n                this.currentUser = new User('Simon', 'saimon@devdactic.com');\r\n                observer.next(access);\r\n                observer.complete();\r\n            });\r\n        }\r\n    }\r\n\r\n    public register(credentials) {\r\n        if (credentials.email === null || credentials.password === null) {\r\n            return Observable.throw(\"Please insert credentials\");\r\n        } else {\r\n            // At this point store the credentials to your backend!\r\n            return Observable.create(observer => {\r\n                observer.next(true);\r\n                observer.complete();\r\n            });\r\n        }\r\n    }\r\n\r\n    public getUserInfo(): User {\r\n        return this.currentUser;\r\n    }\r\n\r\n    public logout() {\r\n        return Observable.create(observer => {\r\n            this.currentUser = null;\r\n            observer.next(true);\r\n            observer.complete();\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/auth-service/auth-service.ts","var map = {\n\t\"../pages/apontamento/apontamento.module\": [\n\t\t284,\n\t\t1\n\t],\n\t\"../pages/create-account/create-account.module\": [\n\t\t285,\n\t\t0\n\t],\n\t\"../pages/login/login.module\": [\n\t\t283,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 162;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 162\n// module chunks = 3","import { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class Global {\n    \n    public sem_banco: boolean = true;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/global/global.ts","import { Injectable } from '@angular/core';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite';\n\n@Injectable()\nexport class SqlStorage {\n\n  \tconstructor(private sqlite: SQLite) { }\n\n    /**\n   \t* Cria um banco caso não exista ou pega um banco existente com o nome no parametro\n   \t*/\n\tpublic getDB() {\n\t\treturn this.sqlite.create({\n\t  \t\tname: 'clickponto.db',\n\t  \t\tlocation: 'default'\n\t\t});\n\t}\n\n\t/**\n\t* Cria a estrutura inicial do banco de dados\n\t*/\n\tpublic createDatabase() {\n\t\treturn this.getDB()\n\t  \t\t.then((db: SQLiteObject) => {\n\n\t    \t// Criando as tabelas\n\t    \tthis.createTables(db);\n\t    \t\n\t    \t// Inserindo dados padrão\n        \tthis.insertDefaultItems(db);\n\t  })\n\t  .catch(e => console.log(e));\n\t}\n\n\t/**\n\t* Criando as tabelas no banco de dados\n\t* @param db\n\t*/\n\tprivate createTables(db: SQLiteObject) {\n\t// Criando as tabelas\n\tdb.sqlBatch([\n\t  ['CREATE TABLE IF NOT EXISTS dados (id integer primary key AUTOINCREMENT NOT NULL, nome TEXT, email TEXT, carga_horaria REAL)']\n\t])\n\t  .then(() => console.log('Tabelas criadas'))\n\t  .catch(e => console.error('Erro ao criar as tabelas', e));\n\t}\n\n\tprivate insertDefaultItems(db: SQLiteObject) {\n\t\tdb.executeSql('select COUNT(id) as qtd from categories', {}) \n\t\t.then((data: any) => {\n\t  \t\t//Se não existe nenhum registro\n\t  \t\tif (data.rows.item(0).qtd == 0) {\n\n\t    \t// Criando as tabelas\n\t    \tdb.sqlBatch([\n\t      \t\t['insert into dados (nome,email,carg_horaria) values (?,?,?)', ['Usuário Teste'],['usuario@gmail.com'],['08:00']]\n\t      \t\t\n\t    \t])\n\t      \t.then(() => console.log('Dados padrões incluídos'))\n\t      \t.catch(e => console.error('Erro ao incluir dados padrões', e));\n\t  \t}\n\t})\n\t.catch(e => console.error('Erro ao consultar a qtd de categorias', e));\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/sql-storage/sql-storage.ts","\r\nimport { Component } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\n\r\n@Component({\r\n  selector: 'page-home',\r\n  templateUrl: 'home.html'\r\n})\r\nexport class HomePage {\r\n\r\n  constructor(public navCtrl: NavController) { }  \r\n\r\n  openCreateAccount() {\r\n    this.navCtrl.push('CreateAccountPage');\r\n  }\r\n\r\n  openLogin() {\r\n  \tthis.navCtrl.push('LoginPage');\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response, ResponseOptions } from '@angular/http';\nimport { CacheService } from \"ionic-cache\";\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class CacheProvider {\n\n    constructor(public http: Http, private cache: CacheService) { }\n\n    loadList(parans) {\r\n        let headers = new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' });\r\n        let url = \"http://localhost:60643/api/account/login\";\r\n        let cacheKey = url;\r\n        let request = this.http.post(url, parans, {\r\n            headers: headers,\r\n            method: \"POST\",\r\n            params: parans\r\n        }).map(\r\n            (res: Response) => { return res.json(); }\r\n        );\r\n\r\n        let delayType = 'all'; // send new request to server everytime, if it's set to none it will send new request only when entry is expired\r\n        let response = this.cache.loadFromDelayedObservable(cacheKey, request, delayType);\r\n\r\n        response.subscribe(data => {\r\n            debugger\r\n            console.log(\"Data:\" + data.json());\r\n        });\r\n        \r\n\r\n\r\n        //return this.cache.loadFromObservable(cacheKey, request).subscribe((res: Response) => { console.log(res); });\r\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/cache/cache.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { AuthService } from './../providers/auth-service/auth-service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { CacheModule } from \"ionic-cache\";\r\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\r\nimport { IonicStorageModule } from '@ionic/storage';\r\nimport { MyApp } from './app.component';\r\nimport { HomePage } from '../pages/home/home';\r\nimport { LoginPage } from '../pages/login/login';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SQLite  , SQLiteDatabaseConfig , SQLiteObject } from '@ionic-native/sqlite';\r\nimport { SqlStorage } from '../providers/sql-storage/sql-storage';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { Dados } from '../providers/dados/dados';\r\nimport { HttpModule } from '@angular/http';\r\nimport { CacheProvider } from '../providers/cache/cache';\nimport { Global } from '../providers/global/global';\r\n\r\n\r\nclass SQLiteMock {\r\n  public create(config: SQLiteDatabaseConfig): Promise<SQLiteObject> {\r\n\r\n      return new Promise((resolve,reject)=>{\r\n      resolve(new SQLiteObject(new Object()));\r\n      });\r\n  }\r\n} \r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    HomePage,\r\n    LoginPage\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    IonicModule.forRoot(MyApp, {}, \n{\n  links: [\n    { loadChildren: '../pages/login/login.module#LoginPageModule', name: 'LoginPage', segment: 'login', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/apontamento/apontamento.module#ApontamentoPageModule', name: 'ApontamentoPage', segment: 'apontamento', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/create-account/create-account.module#CreateAccountPageModule', name: 'CreateAccountPage', segment: 'create-account', priority: 'low', defaultHistory: [] }\n  ]\n}),\r\n    IonicStorageModule.forRoot(),\r\n    CacheModule.forRoot(),\r\n    HttpModule\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    HomePage,\r\n    LoginPage\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    {provide: SQLite, useClass: SQLiteMock},\r\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\r\n    SqlStorage,\r\n    Dados,\r\n    CacheProvider,\r\n    AuthService,\n    Global,\r\n  ],\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { Nav, Platform } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { SqlStorage } from '../providers/sql-storage/sql-storage';\r\nimport { CacheService } from \"ionic-cache\";\r\nimport { HomePage } from '../pages/home/home';\r\nimport { LoginPage } from '../pages/login/login';\r\n\r\n@Component({\r\n  templateUrl: 'app.html'\r\n})\r\nexport class MyApp {\r\n  @ViewChild(Nav) nav: Nav;\r\n\r\n  rootPage: any = LoginPage;\r\n\r\n  pages: Array<{title: string, component: any}>;\r\n\r\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen, public sqlStorage: SqlStorage, public cache: CacheService) {\r\n      this.initializeApp();\r\n      cache.setDefaultTTL(60 * 60);\r\n     \r\n\r\n    // used for an example of ngFor and navigation\r\n    this.pages = [\r\n      { title: 'Home', component: HomePage }\r\n    ];\r\n    //sqlStorage.createDatabase()\r\n    //  .then(() => {\r\n    //    // fechando a SplashScreen somente quando o banco for criado\r\n    //    this.openHomePage(splashScreen);\r\n    //  })\r\n    //  .catch(() => {\r\n    //    // ou se houver erro na criação do banco\r\n    //    this.openHomePage(splashScreen);\r\n    //  });\r\n    \r\n  }\r\n\r\n  initializeApp() {\r\n    this.platform.ready().then(() => {\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      this.statusBar.styleDefault();\r\n      this.splashScreen.hide();\r\n    });\r\n  }\r\n\r\n  openPage(page) {\r\n    // Reset the content nav to have just this page\r\n    // we wouldn't want the back button to show in this scenario\r\n    this.nav.setRoot(page.component);\r\n  }\r\n\r\n  private openHomePage(splashScreen: SplashScreen) {\r\n    splashScreen.hide();\r\n    this.rootPage = HomePage;\r\n  }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}